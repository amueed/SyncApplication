#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncApplication.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="local_db")]
	public partial class SyncDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSyncToken(SyncToken instance);
    partial void UpdateSyncToken(SyncToken instance);
    partial void DeleteSyncToken(SyncToken instance);
    #endregion
		
		public SyncDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["local_dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SyncToken> SyncTokens
		{
			get
			{
				return this.GetTable<SyncToken>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SyncToken")]
	public partial class SyncToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TokenId;
		
		private System.Nullable<int> _AccountId;
		
		private string _UserEmail;
		
		private string _EmailServer;
		
		private string _TokenType;
		
		private string _AccessToken;
		
		private string _RefreshToken;
		
		private System.Nullable<int> _ExpiresIn;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.DateTime> _ConfigurationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenIdChanging(int value);
    partial void OnTokenIdChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnEmailServerChanging(string value);
    partial void OnEmailServerChanged();
    partial void OnTokenTypeChanging(string value);
    partial void OnTokenTypeChanged();
    partial void OnAccessTokenChanging(string value);
    partial void OnAccessTokenChanged();
    partial void OnRefreshTokenChanging(string value);
    partial void OnRefreshTokenChanged();
    partial void OnExpiresInChanging(System.Nullable<int> value);
    partial void OnExpiresInChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnConfigurationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfigurationDateChanged();
    #endregion
		
		public SyncToken()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TokenId
		{
			get
			{
				return this._TokenId;
			}
			set
			{
				if ((this._TokenId != value))
				{
					this.OnTokenIdChanging(value);
					this.SendPropertyChanging();
					this._TokenId = value;
					this.SendPropertyChanged("TokenId");
					this.OnTokenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(50)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailServer", DbType="VarChar(50)")]
		public string EmailServer
		{
			get
			{
				return this._EmailServer;
			}
			set
			{
				if ((this._EmailServer != value))
				{
					this.OnEmailServerChanging(value);
					this.SendPropertyChanging();
					this._EmailServer = value;
					this.SendPropertyChanged("EmailServer");
					this.OnEmailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenType", DbType="VarChar(10)")]
		public string TokenType
		{
			get
			{
				return this._TokenType;
			}
			set
			{
				if ((this._TokenType != value))
				{
					this.OnTokenTypeChanging(value);
					this.SendPropertyChanging();
					this._TokenType = value;
					this.SendPropertyChanged("TokenType");
					this.OnTokenTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessToken", DbType="NVarChar(2000)")]
		public string AccessToken
		{
			get
			{
				return this._AccessToken;
			}
			set
			{
				if ((this._AccessToken != value))
				{
					this.OnAccessTokenChanging(value);
					this.SendPropertyChanging();
					this._AccessToken = value;
					this.SendPropertyChanged("AccessToken");
					this.OnAccessTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshToken", DbType="NVarChar(2000)")]
		public string RefreshToken
		{
			get
			{
				return this._RefreshToken;
			}
			set
			{
				if ((this._RefreshToken != value))
				{
					this.OnRefreshTokenChanging(value);
					this.SendPropertyChanging();
					this._RefreshToken = value;
					this.SendPropertyChanged("RefreshToken");
					this.OnRefreshTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresIn", DbType="Int")]
		public System.Nullable<int> ExpiresIn
		{
			get
			{
				return this._ExpiresIn;
			}
			set
			{
				if ((this._ExpiresIn != value))
				{
					this.OnExpiresInChanging(value);
					this.SendPropertyChanging();
					this._ExpiresIn = value;
					this.SendPropertyChanged("ExpiresIn");
					this.OnExpiresInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfigurationDate
		{
			get
			{
				return this._ConfigurationDate;
			}
			set
			{
				if ((this._ConfigurationDate != value))
				{
					this.OnConfigurationDateChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationDate = value;
					this.SendPropertyChanged("ConfigurationDate");
					this.OnConfigurationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
